@page
@model MockupWeb.Pages.db.IndexModel
@using Sorling.SqlConnAuthWeb.extenstions;
@using Sorling.SqlConnAuthWeb.authentication;
@{
}

DB
<p>
    @if (Model.SQLConnectionString is not null)
    {
        <div>@Model.SQLConnectionString</div>
    }
    else
    {
        <div>Not connected</div>
    }
</p>
<p>
    @if (User is not null)
    {
        <div>@User?.Identity?.Name</div>
        <div>@User?.Identity?.IsAuthenticated</div>
    }
</p>
<p>
    <table>
        @foreach (var db in Model.DBs!)
        {
            <tr><td>@db.Name</td></tr>
        }
    </table>
</p>
<div>
    @Model.AppSettingsPath
</div>
<div>
    Selected db: @Model.SelectedDB
</div>
<div>
    <a href="selectdb">Select DB</a>
</div>
<div>
    <table id="recentItemsTable" border="1">
        <thead>
            <tr><th>Server</th><th>User</th><th>Databases</th></tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>
<script>
    function renderRecentItems() {
        if (!window.SqlAuthRecent) return;
        var items = window.SqlAuthRecent.getRecentItems();
        var tbody = document.getElementById('recentItemsTable').getElementsByTagName('tbody')[0];
        tbody.innerHTML = '';
        for (var i = 0; i < items.length; i++) {
            var row = document.createElement('tr');
            var server = document.createElement('td');
            server.textContent = items[i].server;
            var user = document.createElement('td');
            user.textContent = items[i].user;
            var dbs = document.createElement('td');
            dbs.textContent = (items[i].databases || []).join(', ');
            row.appendChild(server);
            row.appendChild(user);
            row.appendChild(dbs);
            tbody.appendChild(row);
        }
    }
    document.addEventListener('DOMContentLoaded', renderRecentItems);
</script>
