@page
@model Sorling.SqlConnAuthWeb.areas.sqlconnauth.pages.IndexModel
@using Sorling.SqlConnAuthWeb;
@{
    ViewData["Title"] = "Connect to SQL Server";
}

<h2>@ViewData["Title"]</h2>
<div class="row">
    <div class="col-md-3 form-box">
        <form method="post" id="sqlAuthForm">
            <div class="form-group">
                <label asp-for="Input.SqlServer"></label>
                <span asp-validation-for="Input.SqlServer" class="error-text"></span>
                <input asp-for="Input.SqlServer" class="form-control" autofocus>
            </div>
            @if (Model.SQLAuthOptions.AllowIntegratedSecurity)
            {
                <div>
                    <input type="checkbox" id="winauthcheck">Use Windows authentication
                </div>
            }
            <div class="form-group" id="usernamediv">
                <label asp-for="Input.UserName"></label>
                <span asp-validation-for="Input.UserName" class="error-text"></span>
                <input asp-for="Input.UserName" class="form-control">
            </div>
            <input type="hidden" id="trustservercerificate" name="trustservercerificate" value="false" />
            <div class="form-actions d-flex align-items-center">
                <span id="recentToggleContainer" style="margin-right: 1em; display:none;">
                    <a href="#" id="recentToggle" onclick="toggleRecentList(); return false;">Recent</a>
                </span>
                <button type="submit" class="btn btn-primary">Connect</button>
            </div>
            <div id="recentListContainer" style="display:none; margin-top:10px;">
                <div class="form-group">
                    <ul class="db-list one-column-db-list" id="recentList" style="margin-top:5px;"></ul>
                </div>
            </div>
        </form>
    </div>
</div>
@if (Model.SQLAuthOptions.AllowIntegratedSecurity)
{
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            $('#winauthcheck').change(function () {
                var winauth = $(this).is(':checked');
                $("#usernamediv").toggle(!winauth);
                if (winauth) {
                    $('#Input_UserName').val('--win--auth--');
                } else {
                    $('#Input_UserName').val('');
                }
            });
        })
    </script>
}
<script>
    // Use SqlAuthRecent from shared js.cshtml
    function toggleRecentList() {
        const cont = document.getElementById('recentListContainer');
        cont.style.display = cont.style.display === 'none' ? '' : 'none';
    }
    function renderRecentList() {
        const items = window.SqlAuthRecent.getRecentItems();
        const ul = document.getElementById('recentList');
        ul.innerHTML = '';
        for (const item of items) {
            const li = document.createElement('li');
            const a = document.createElement('a');
            a.href = '#';
            a.textContent = `${item.user}@@${item.server}`;
            a.onclick = function () {
                document.getElementById('Input_SqlServer').value = item.server;
                document.getElementById('Input_UserName').value = item.user;
                document.getElementById('trustservercerificate').value = (item.trustservercerificate === true).toString();
                window.SqlAuthRecent.addRecentServerUser(item.trustservercerificate); // move to top and keep trust
                document.getElementById('sqlAuthForm').submit();
                return false;
            };
            li.appendChild(a);
            // Add red X button
            const removeBtn = document.createElement('button');
            removeBtn.type = 'button';
            removeBtn.className = 'recent-remove-btn';
            removeBtn.title = 'Remove';
            removeBtn.innerHTML = '&times;';
            removeBtn.onclick = function (e) {
                e.stopPropagation();
                e.preventDefault();
                // Remove from recent
                const filtered = items.filter(x => !(x.server === item.server && x.user === item.user));
                window.SqlAuthRecent.saveRecentItems(filtered);
                renderRecentList();
                updateRecentToggleVisibility();
            };
            li.appendChild(removeBtn);
            ul.appendChild(li);
        }
    }
    function updateRecentToggleVisibility() {
        const items = window.SqlAuthRecent.getRecentItems();
        document.getElementById('recentToggleContainer').style.display = items.length >0 ? '' : 'none';
    }
    document.addEventListener('DOMContentLoaded', function () {
        updateRecentToggleVisibility();
        renderRecentList();
        document.getElementById('recentToggle').onclick = function () {
            renderRecentList();
            toggleRecentList();
            return false;
        };
        document.getElementById('sqlAuthForm').addEventListener('submit', function () {
            // Set SqlAuthContext for shared script
            window.SqlAuthContext = {
                SqlServer: document.getElementById('Input_SqlServer').value,
                SqlUserName: document.getElementById('Input_UserName').value
            };
            if (window.SqlAuthContext.SqlServer && window.SqlAuthContext.SqlUserName) {
                window.SqlAuthRecent.addRecentServerUser();
            }
        });
    });
</script>