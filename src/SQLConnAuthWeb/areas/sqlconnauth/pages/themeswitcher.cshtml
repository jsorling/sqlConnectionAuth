@page
@model Sorling.SqlConnAuthWeb.areas.sqlconnauth.pages.ThemeSwitcherModel
@{
    Layout = null;
}
(function () {
@if (Model.SqlAuthUIOptions.UseThemeSwitcher())
{
    <text>
        const THEME_KEY = '@(Model.SqlAuthUIOptions.ThemeSwitcherLocalStorageName)';
        const iconContainer = document.getElementById('theme-switcher-icon-container');
        const iconSpan = document.getElementById('theme-switcher-icon');
        const forcedTheme = document.documentElement.getAttribute('data-bss-forced-theme');
        const THEMES = ['system', 'light', 'dark'];
        // SVGs for system, light, dark (all monochrome)
        const ICONS = {
        'system': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><rect x="3" y="5" width="18" height="12" rx="2" fill="currentColor" /><rect x="7" y="19" width="10" height="2" rx="1" fill="currentColor" /></svg>',
        'light': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><circle cx="12" cy="12" r="5" fill="currentColor" /><g stroke="currentColor" stroke-width="2"><line x1="12" y1="1" x2="12" y2="4" /><line x1="12" y1="20" x2="12" y2="23" /><line x1="4.22" y1="4.22" x2="5.64" y2="5.64" /><line x1="18.36" y1="18.36" x2="19.78" y2="19.78" /><line x1="1" y1="12" x2="4" y2="12" /><line x1="20" y1="12" x2="23" y2="12" /><line x1="4.22" y1="19.78" x2="5.64" y2="18.36" /><line x1="18.36" y1="5.64" x2="19.78" y2="4.22" /></g></svg>',
        'dark': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="currentColor" d="M21 12.79A9 9 0 0 1 12.79 3a7 7 0 1 0 8.21 9.79z" /></svg>'
        };
        function getStoredTheme() {
        return localStorage.getItem(THEME_KEY);
        }
        function setStoredTheme(theme) {
        localStorage.setItem(THEME_KEY, theme);
        }
        function getSystemTheme() {
        return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
        }
        function getPreferredTheme() {
        if (forcedTheme) return forcedTheme;
        const storedTheme = getStoredTheme();
        if (storedTheme) return storedTheme;
        return 'system';
        }
        function applyTheme(theme) {
        let themeToSet = theme;
        if (theme === 'system') {
        themeToSet = getSystemTheme();
        }
        document.documentElement.setAttribute('data-bs-theme', themeToSet);
        document.documentElement.setAttribute('data-theme', themeToSet);
        }
        function setTheme(theme) {
        setStoredTheme(theme);
        applyTheme(theme);
        updateIcon(theme);
        }
        function updateIcon(theme) {
        if (!iconSpan) return;
        iconSpan.innerHTML = ICONS[theme] || ICONS['system'];
        iconContainer.title =
            theme === 'system' ? 'System default' :
            theme === 'light' ? 'Light mode' :
            theme === 'dark' ? 'Dark mode' :
            '';
        }
        function cycleTheme() {
        const current = getPreferredTheme();
        let idx = THEMES.indexOf(current);
        if (idx === -1) idx = 0;
        const nextTheme = THEMES[(idx + 1) % THEMES.length];
        setTheme(nextTheme);
        }
        if (iconContainer) {
        iconContainer.addEventListener('click', function() {
        cycleTheme();
        });
        }
        // On system theme change, update if system is selected
        window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', function() {
        if (getStoredTheme() === 'system' || !getStoredTheme()) {
        applyTheme('system');
        updateIcon('system');
        }
        });
        // On page load
        document.addEventListener('DOMContentLoaded', function() {
        const theme = getPreferredTheme();
        setTheme(theme);
        });
    </text>
}
})();